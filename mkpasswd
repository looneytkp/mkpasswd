#!/bin/bash
VERSION="1.0.0"
INSTALL_DIR="$HOME/.mkpasswd"
VERSION_FILE="$HOME/.mkpasswd/.last_update_check"
REMOTE_VERSION_URL="https://raw.githubusercontent.com/looneytkp/mkpasswd/main/version.txt"

check_required_files() {
  REQUIRED_FILES=(
    "mkpasswd"
    "vault.py"
    "password_gen.py"
    "version.txt"
    "install.sh"
    "uninstall.sh"
    "install.ps1"
    "uninstall.ps1"
    "mkpasswd.ps1"
    "mkpasswd.cmd"
    "remote-install.sh"
    "passwords.gpg"
    "passphrase_hint.txt"
  )

  MISSING=false
  for file in "${REQUIRED_FILES[@]}"; do
    FULL_PATH="$INSTALL_DIR/$file"
    if [ ! -f "$FULL_PATH" ]; then
      echo "[x] Missing file: $file"
      MISSING=true
    fi
  done

  if [ "$MISSING" = true ]; then
    echo
    read -p "One or more critical files are missing. Reinstall mkpasswd? (Y/n): " reinstall_confirm
    if [[ "$reinstall_confirm" =~ ^[Yy]?$ ]]; then
      echo "[*] Reinstalling mkpasswd..."
      bash <(curl -s https://raw.githubusercontent.com/looneytkp/mkpasswd/main/remote-install.sh)
      exit
    else
      echo "[!] Aborting due to missing files."
      exit 1
    fi
  fi
}

check_for_weekly_update() {
  local today=$(date +%s)
  local last_check=0
  if [[ -f "$VERSION_FILE" ]]; then
    last_check=$(cat "$VERSION_FILE")
  fi
  local diff=$(( (today - last_check) / 86400 ))
  if [[ $diff -ge 7 || ! -f "$VERSION_FILE" ]]; then
    curl -s "$REMOTE_VERSION_URL" -o /tmp/mkpasswd_remote_ver.txt
    if [[ -s /tmp/mkpasswd_remote_ver.txt ]]; then
      REMOTE_VERSION=$(cat /tmp/mkpasswd_remote_ver.txt)
      if [[ "$REMOTE_VERSION" != "$VERSION" ]]; then
        echo -e "\n[!] New version available: $REMOTE_VERSION"
        echo "[!] Currently installed: $VERSION"
        read -p "Do you want to update now? (Y/n): " update_confirm
        if [[ "$update_confirm" =~ ^[Yy]?$ ]]; then
          echo "[*] Updating..."
          bash <(curl -s https://raw.githubusercontent.com/looneytkp/mkpasswd/main/remote-install.sh)
          exit
        fi
      fi
    fi
    echo "$today" > "$VERSION_FILE"
  fi
}

# Help menu
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  echo -e "\n\033[1;32mUsage:\033[0m mkpasswd [option]

\033[1;36mCore Commands:\033[0m
  -a, --add          Add a new password
  -l, --list         List saved passwords
  -S                 Search for a password by ID
  -d                 Delete a specific password
  -r                 Rename a saved password
  -L                 Show all saved entries (raw)
  -C                 View change logs

\033[1;36mDropbox Sync (optional):\033[0m
  -b                 Back up vault to Dropbox
  -u                 Uninstall Dropbox integration
  1â€“8                Manual Dropbox panel options

\033[1;36mUtilities:\033[0m
  --update           Check for and install updates
  -h, --help         Show this help message

\033[1;31mIMPORTANT:\033[0m
  - Your vault is encrypted using a passphrase.
  - If you forget it, your passwords cannot be recovered.
  - Use \033[1;33m--update\033[0m weekly to keep mkpasswd fresh.
"
  exit
fi

check_required_files
check_for_weekly_update
